package iostreamdemo;

import java.io.DataInputStream;
import java.io.FileInputStream;
import java.io.IOException;

public class HubController{
    public static void main(String[] args) {
        try (DataInputStream dataInputStream = new DataInputStream(new FileInputStream("MLKhub.txt"))) {
            int totalStations = 0;
            int totalDistricts = 0;

            System.out.println("Rainfall Data:");

            while (dataInputStream.available() > 0) {
                String stationID = dataInputStream.readUTF();
                String stationName = dataInputStream.readUTF();
                String districtName = dataInputStream.readUTF();
                float[] rainfallData = new float[6];

                for (int i = 0; i < 6; i++) {
                    rainfallData[i] = dataInputStream.readFloat();
                }

                // Display station data
                System.out.println("Station ID: " + stationID);
                System.out.println("Station Name: " + stationName);
                System.out.println("District Name: " + districtName);
                System.out.println("Rainfall Data for 6 days:");
                for (int i = 0; i < 6; i++) {
                    System.out.println("Day " + (i + 1) + ": " + rainfallData[i]);
                }

                // Compute and display average rainfall
                float averageRainfall = calculateAverage(rainfallData);
                System.out.print("Average Rainfall: ");
                System.out.printf("%.1f",averageRainfall);

                totalStations++;
                totalDistricts++;
                System.out.println("\n----------------------------------------");
            }

            System.out.println("Total Stations: " + totalStations);
            System.out.println("Total Districts: " + totalDistricts);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private static float calculateAverage(float[] rainfallData) {
        float sum = 0;
        for (float rainfall : rainfallData) {
            sum += rainfall;
        }
        return sum / rainfallData.length;
    }
}
