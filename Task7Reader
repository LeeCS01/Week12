package iostreamdemo;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

public class Task7Reader {
    public static void main(String[] args) {
        try (BufferedReader reader = new BufferedReader(new FileReader("MLKhubWriter.txt"))) {
            int totalStations = 0;
            int totalDistricts = 0;

            System.out.println("Rainfall Data:");

            String line;
            while ((line = reader.readLine()) != null) {
                String[] data = line.split(",");

                int stationID = Integer.parseInt(data[0]);
                String stationName = data[1];
                String districtName = data[2];
                double[] rainfallData = new double[6];

                for (int i = 0; i < 6; i++) {
                    rainfallData[i] = Double.parseDouble(data[i + 3]);
                }

                // Display station data
                System.out.println("Station ID: " + stationID);
                System.out.println("Station Name: " + stationName);
                System.out.println("District Name: " + districtName);
                System.out.println("Rainfall Data for 6 days:");
                for (int days = 0; days < 6; days++) {
                    System.out.println("Day " + (days + 1) + ": " + rainfallData[days]);
                }

                // Compute and display average rainfall
                double averageRainfall = calculateAverage(rainfallData);
                System.out.println("Average Rainfall: " + averageRainfall);

                totalStations++;
                totalDistricts++;
                System.out.println("----------------------------------------");
            }

            System.out.println("Total Stations: " + totalStations);
            System.out.println("Total Districts: " + totalDistricts);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

		private static double calculateAverage(double[] rainfallData) {
			   double sum = 0;
		        for (double rainfall : rainfallData) {
		            sum += rainfall;
		        }
		        return sum / rainfallData.length;
		    }
		}

	    
	  
	
